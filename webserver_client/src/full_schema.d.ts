/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 *
 * String constants that represent connection types.
 *
 * Default: Connection used by the editor. Opened by the editor upon the initial connection.
 * Query: Connection used for executing queries. Opened when the first query is executed.
 *
 */
export type ConnectionType = "Default" | "Query" | "Edit" | "QueryCancel" | "ObjectExplorer" | "Intellisense";
/**
 * Enum for the type of backups that are supported
 */
export type BackupType = "dump" | "directory" | "tar" | "sql";
export type ExecuteStringParams = ExecuteRequestParamsBase;
export type ExecuteDocumentSelectionParams = ExecuteRequestParamsBase;
export type ExecuteDocumentStatementParams = ExecuteRequestParamsBase;
export type SaveResultsAsCsvRequestParams = SaveResultsRequestParams;
export type SaveResultsAsJsonRequestParams = SaveResultsRequestParams;
export type SaveResultsAsExcelRequestParams = SaveResultsRequestParams;
/**
 * Class that defines the various script operations
 */
export type ScriptOperation = 0 | 1 | 3 | 4;
/**
 *
 * The kind of a completion entry. These are defined by the
 * Language Service specification. SQL types are loosely mapped to these.
 *
 */
export type CompletionItemKind = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18;
export type DocumentRangeFormattingParams = DocumentFormattingParams;
export type RowOperationRequest = SessionOperationRequest;
export type UpdateCellRequest = RowOperationRequest;
export type CreateRowRequest = SessionOperationRequest;
export type DeleteRowRequest = RowOperationRequest;
export type DisposeRequest = SessionOperationRequest;
export type EditCommitRequest = SessionOperationRequest;
export type RevertCellRequest = RowOperationRequest;
export type RevertRowRequest = RowOperationRequest;
export type ConnectionOption = ServiceOption;
/**
 * Text document sync kind contract
 */
export type TextDocumentSyncKind = 0 | 1 | 2;
/**
 * Enum representing task status
 */
export type TaskStatus = 0 | 1 | 2 | 3 | 4 | 5;
/**
 * Contract enum for representing metadata types
 */
export type MetadataType = 0 | 1 | 2 | 3;

export interface UnifiedSchema {
  GetDatabaseInfoParameters?: GetDatabaseInfoParameters;
  CancelConnectParams?: CancelConnectParams;
  ConnectionType?: ConnectionType;
  BuildConnectionInfoParams?: BuildConnectionInfoParams;
  ConnectRequestParams?: ConnectRequestParams;
  ConnectionDetails?: ConnectionDetails;
  ChangeDatabaseRequestParams?: ChangeDatabaseRequestParams;
  DisconnectRequestParams?: DisconnectRequestParams;
  GetConnectionStringParams?: GetConnectionStringParams;
  ListDatabasesParams?: ListDatabasesParams;
  DidChangeConfigurationParams?: DidChangeConfigurationParams;
  DidChangeTextDocumentParams?: DidChangeTextDocumentParams;
  DidCloseTextDocumentParams?: DidCloseTextDocumentParams;
  DidOpenTextDocumentParams?: DidOpenTextDocumentParams;
  CapabilitiesRequestParams?: CapabilitiesRequestParams;
  InitializeRequestParams?: InitializeRequestParams;
  BackupParams?: BackupParams;
  BackupInfo?: BackupInfo;
  BackupType?: BackupType;
  RestoreParams?: RestoreParams;
  RestoreOptions?: RestoreOptions;
  CancelTaskParameters?: CancelTaskParameters;
  ListTasksParameters?: ListTasksParameters;
  ExecuteRequestParamsBase?: ExecuteRequestParamsBase;
  ExecutionPlanOptions?: ExecutionPlanOptions;
  ExecuteStringParams?: ExecuteStringParams;
  ExecuteDocumentSelectionParams?: ExecuteDocumentSelectionParams;
  SelectionData?: SelectionData;
  ExecuteDocumentStatementParams?: ExecuteDocumentStatementParams;
  SubsetParams?: SubsetParams;
  QueryCancelParams?: QueryCancelParams;
  QueryDisposeParams?: QueryDisposeParams;
  SimpleExecuteRequest?: SimpleExecuteRequest;
  QueryExecutionPlanRequest?: QueryExecutionPlanRequest;
  SaveResultsRequestParams?: SaveResultsRequestParams;
  SaveResultsAsCsvRequestParams?: SaveResultsAsCsvRequestParams;
  SaveResultsAsJsonRequestParams?: SaveResultsAsJsonRequestParams;
  SaveResultsAsExcelRequestParams?: SaveResultsAsExcelRequestParams;
  MetadataListParameters?: MetadataListParameters;
  ScriptAsParameters?: ScriptAsParameters;
  ScriptOperation?: ScriptOperation;
  LanguageFlavorChangeParams?: LanguageFlavorChangeParams;
  TextDocumentPosition?: TextDocumentPosition;
  TextDocumentIdentifier?: TextDocumentIdentifier;
  Position?: Position;
  CompletionItem?: CompletionItem;
  CompletionItemKind?: CompletionItemKind;
  TextEdit?: TextEdit;
  Range?: Range;
  DocumentFormattingParams?: DocumentFormattingParams;
  FormattingOptions?: FormattingOptions;
  DocumentRangeFormattingParams?: DocumentRangeFormattingParams;
  CloseSessionParameters?: CloseSessionParameters;
  ExpandParameters?: ExpandParameters;
  InitializeEditParams?: InitializeEditParams;
  EditInitializerFilter?: EditInitializerFilter;
  SessionOperationRequest?: SessionOperationRequest;
  RowOperationRequest?: RowOperationRequest;
  UpdateCellRequest?: UpdateCellRequest;
  CreateRowRequest?: CreateRowRequest;
  DeleteRowRequest?: DeleteRowRequest;
  DisposeRequest?: DisposeRequest;
  EditCommitRequest?: EditCommitRequest;
  RevertCellRequest?: RevertCellRequest;
  RevertRowRequest?: RevertRowRequest;
  EditSubsetParams?: EditSubsetParams;
  GetDatabaseInfoResponse?: GetDatabaseInfoResponse;
  DatabaseInfo?: DatabaseInfo;
  ConnectionCompleteParams?: ConnectionCompleteParams;
  ServerInfo?: ServerInfo;
  ConnectionSummary?: ConnectionSummary;
  ListDatabasesResponse?: ListDatabasesResponse;
  CapabilitiesResult?: CapabilitiesResult;
  DMPServerCapabilities?: DMPServerCapabilities;
  ConnectionProviderOptions?: ConnectionProviderOptions;
  FeatureMetadataProvider?: FeatureMetadataProvider;
  ServiceOption?: ServiceOption;
  ConnectionOption?: ConnectionOption;
  CategoryValue?: CategoryValue;
  InitializeResult?: InitializeResult;
  ServerCapabilities?: ServerCapabilities;
  TextDocumentSyncKind?: TextDocumentSyncKind;
  CompletionOptions?: CompletionOptions;
  SignatureHelpOptions?: SignatureHelpOptions;
  TaskInfo?: TaskInfo;
  TaskStatus?: TaskStatus;
  Task?: Task;
  lock?: Lock;
  DbColumn?: DbColumn;
  DbCellValue?: DbCellValue;
  SubsetResult?: SubsetResult;
  ResultSetSubset?: ResultSetSubset;
  ResultSetSummary?: ResultSetSummary;
  BatchSummary?: BatchSummary;
  BatchNotificationParams?: BatchNotificationParams;
  QueryCancelResult?: QueryCancelResult;
  MessageNotificationParams?: MessageNotificationParams;
  ResultMessage?: ResultMessage;
  QueryCompleteNotificationParams?: QueryCompleteNotificationParams;
  ResultSetNotificationParams?: ResultSetNotificationParams;
  SimpleExecuteResponse?: SimpleExecuteResponse;
  SaveResultRequestResult?: SaveResultRequestResult;
  ObjectMetadata?: ObjectMetadata;
  MetadataType?: MetadataType;
  MetadataListResponse?: MetadataListResponse;
  StatusChangeParams?: StatusChangeParams;
  DefinitionResult?: DefinitionResult;
  CreateSessionResponse?: CreateSessionResponse;
  NodeInfo?: NodeInfo;
  SessionCreatedParameters?: SessionCreatedParameters;
  ExpandCompletedParameters?: ExpandCompletedParameters;
  DisposeResponse?: DisposeResponse;
  EditCommitResponse?: EditCommitResponse;
  SessionReadyNotificationParams?: SessionReadyNotificationParams;
  EditSubsetResponse?: EditSubsetResponse;
  [k: string]: unknown;
}
export interface GetDatabaseInfoParameters {
  options?: {
    [k: string]: unknown;
  };
  owner_uri?: string;
  [k: string]: unknown;
}
export interface CancelConnectParams {
  owner_uri?: string;
  type?: ConnectionType;
  [k: string]: unknown;
}
export interface BuildConnectionInfoParams {
  owner_uri?: string;
  type?: ConnectionType;
  [k: string]: unknown;
}
export interface ConnectRequestParams {
  owner_uri?: string;
  connection?: ConnectionDetails;
  type?: ConnectionType;
  [k: string]: unknown;
}
export interface ConnectionDetails {
  database_name?: string;
  port?: string;
  server_name?: string;
  user_name?: string;
  options?: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface ChangeDatabaseRequestParams {
  owner_uri?: string;
  new_database?: string;
  connection?: ConnectionDetails;
  [k: string]: unknown;
}
export interface DisconnectRequestParams {
  owner_uri?: string;
  type?: ConnectionType;
  [k: string]: unknown;
}
export interface GetConnectionStringParams {
  owner_uri?: string;
  [k: string]: unknown;
}
export interface ListDatabasesParams {
  owner_uri?: string;
  include_details?: boolean;
  [k: string]: unknown;
}
export interface DidChangeConfigurationParams {
  [k: string]: unknown;
}
export interface DidChangeTextDocumentParams {
  [k: string]: unknown;
}
export interface DidCloseTextDocumentParams {
  [k: string]: unknown;
}
export interface DidOpenTextDocumentParams {
  [k: string]: unknown;
}
export interface CapabilitiesRequestParams {
  host_name?: string;
  host_version?: string;
  [k: string]: unknown;
}
export interface InitializeRequestParams {
  capabilities?: string;
  initialization_options?: string;
  process_id?: number;
  trace?: string;
  root_path?: string;
  root_uri?: string;
  workspace_folders?: string;
  [k: string]: unknown;
}
export interface BackupParams {
  owner_uri?: string;
  backup_info?: BackupInfo;
  task_execution_mode?: string;
  [k: string]: unknown;
}
export interface BackupInfo {
  type?: BackupType;
  path?: string;
  jobs?: number;
  compress?: number;
  data_only?: boolean;
  blobs?: boolean;
  clean?: boolean;
  create?: boolean;
  encoding?: string;
  schema?: string;
  exclude_schema?: string;
  oids?: boolean;
  no_owner?: boolean;
  schema_only?: boolean;
  superuser?: string;
  table?: string;
  exclude_table?: string;
  no_privileges?: boolean;
  column_inserts?: boolean;
  disable_dollar_quoting?: boolean;
  disable_triggers?: boolean;
  enable_row_security?: boolean;
  exclude_table_data?: string;
  if_exists?: boolean;
  inserts?: boolean;
  no_security_labels?: boolean;
  no_synchronized_snapshots?: boolean;
  no_tablespaces?: boolean;
  no_unlogged_table_data?: boolean;
  quote_all_identifiers?: boolean;
  section?: string;
  serializable_deferrable?: boolean;
  snapshot?: string;
  strict_names?: boolean;
  use_set_session_authorization?: boolean;
  [k: string]: unknown;
}
export interface RestoreParams {
  owner_uri?: string;
  options?: RestoreOptions;
  task_execution_mode?: string;
  [k: string]: unknown;
}
export interface RestoreOptions {
  path?: string;
  data_only?: boolean;
  clean?: boolean;
  create?: boolean;
  exit_on_error?: boolean;
  index?: string;
  jobs?: number;
  use_list?: string;
  schema?: string;
  no_owner?: boolean;
  function?: string;
  schema_only?: boolean;
  superuser?: string;
  table?: string;
  trigger?: string;
  no_privileges?: boolean;
  single_transaction?: boolean;
  disable_triggers?: boolean;
  enable_row_security?: boolean;
  if_exists?: boolean;
  no_data_for_failed_tables?: boolean;
  no_security_labels?: boolean;
  no_tablespaces?: boolean;
  section?: string;
  strict_names?: boolean;
  role?: string;
  [k: string]: unknown;
}
export interface CancelTaskParameters {
  task_id?: string;
  [k: string]: unknown;
}
export interface ListTasksParameters {
  list_active_tasks_only?: boolean;
  [k: string]: unknown;
}
export interface ExecuteRequestParamsBase {
  owner_uri?: string;
  execution_plan_options?: ExecutionPlanOptions;
  [k: string]: unknown;
}
export interface ExecutionPlanOptions {
  include_actual_execution_plan_xml?: boolean;
  include_estimated_execution_plan_xml?: boolean;
  [k: string]: unknown;
}
export interface SelectionData {
  start_line?: number;
  start_column?: number;
  end_line?: number;
  end_column?: number;
  [k: string]: unknown;
}
export interface SubsetParams {
  owner_uri?: string;
  batch_index?: number;
  result_set_index?: number;
  rows_start_index?: number;
  rows_count?: number;
  [k: string]: unknown;
}
export interface QueryCancelParams {
  owner_uri?: string;
  [k: string]: unknown;
}
export interface QueryDisposeParams {
  owner_uri?: string;
  [k: string]: unknown;
}
export interface SimpleExecuteRequest {
  owner_uri?: string;
  query_string?: string;
  [k: string]: unknown;
}
export interface QueryExecutionPlanRequest {
  owner_uri?: string;
  batch_index?: number;
  result_set_index?: number;
  [k: string]: unknown;
}
export interface SaveResultsRequestParams {
  is_save_selection?: string;
  file_path?: string;
  batch_index?: number;
  result_set_index?: number;
  owner_uri?: string;
  row_start_index?: number;
  row_end_index?: number;
  column_start_index?: number;
  column_end_index?: number;
  [k: string]: unknown;
}
export interface MetadataListParameters {
  owner_uri?: string;
  [k: string]: unknown;
}
export interface ScriptAsParameters {
  owner_uri?: string;
  operation?: ScriptOperation;
  scripting_objects?: string;
  [k: string]: unknown;
}
export interface LanguageFlavorChangeParams {
  [k: string]: unknown;
}
export interface TextDocumentPosition {
  text_document?: TextDocumentIdentifier;
  position?: Position;
  [k: string]: unknown;
}
export interface TextDocumentIdentifier {
  uri?: string;
  [k: string]: unknown;
}
export interface Position {
  line?: number;
  character?: number;
  [k: string]: unknown;
}
export interface CompletionItem {
  label?: string;
  kind?: CompletionItemKind;
  detail?: string;
  documentation?: string;
  sort_text?: string;
  filter_text?: string;
  insert_text_format?: string;
  text_edit?: TextEdit;
  data?: string;
  [k: string]: unknown;
}
export interface TextEdit {
  range?: Range;
  new_text?: string;
  [k: string]: unknown;
}
export interface Range {
  start?: Position;
  end?: Position;
  [k: string]: unknown;
}
export interface DocumentFormattingParams {
  text_document?: TextDocumentIdentifier;
  options?: FormattingOptions;
  [k: string]: unknown;
}
export interface FormattingOptions {
  tab_size?: number;
  insert_spaces?: boolean;
  [k: string]: unknown;
}
export interface CloseSessionParameters {
  session_id?: string;
  owner_uri?: string;
  type?: number;
  options?: {
    [k: string]: unknown;
  };
  server_name?: string;
  database_name?: string;
  user_name?: string;
  [k: string]: unknown;
}
export interface ExpandParameters {
  session_id?: string;
  node_path?: string;
  [k: string]: unknown;
}
export interface InitializeEditParams {
  owner_uri?: string;
  schema_name?: string;
  object_type?: string;
  object_name?: string;
  query_string?: string;
  filters?: EditInitializerFilter;
  [k: string]: unknown;
}
export interface EditInitializerFilter {
  limit_results?: number;
  [k: string]: unknown;
}
export interface SessionOperationRequest {
  owner_uri?: string;
  [k: string]: unknown;
}
export interface EditSubsetParams {
  owner_uri?: string;
  row_start_index?: number;
  row_count?: number;
  [k: string]: unknown;
}
export interface GetDatabaseInfoResponse {
  database_info?: DatabaseInfo;
  [k: string]: unknown;
}
export interface DatabaseInfo {
  OWNER?: string;
  DBNAME?: string;
  SIZE?: string;
  [k: string]: unknown;
}
export interface ConnectionCompleteParams {
  owner_uri?: string;
  connection_id?: string;
  messages?: string;
  error_message?: string;
  error_number?: number;
  server_info?: ServerInfo;
  connection_summary?: ConnectionSummary;
  type?: ConnectionType;
  [k: string]: unknown;
}
export interface ServerInfo {
  server?: string;
  server_version?: string;
  is_cloud?: boolean;
  [k: string]: unknown;
}
export interface ConnectionSummary {
  [k: string]: unknown;
}
export interface ListDatabasesResponse {
  database_names?: string;
  [k: string]: unknown;
}
export interface CapabilitiesResult {
  capabilities?: DMPServerCapabilities;
  [k: string]: unknown;
}
export interface DMPServerCapabilities {
  protocol_version?: string;
  provider_name?: string;
  provider_display_name?: string;
  connection_provider?: ConnectionProviderOptions;
  features?: string;
  [k: string]: unknown;
}
export interface ConnectionProviderOptions {
  options?: string;
  [k: string]: unknown;
}
export interface FeatureMetadataProvider {
  enabled?: boolean;
  feature_name?: string;
  options_metadata?: string;
  [k: string]: unknown;
}
export interface ServiceOption {
  VALUE_TYPE_STRING?: string;
  VALUE_TYPE_MULTI_STRING?: string;
  VALUE_TYPE_PASSWORD?: string;
  VALUE_TYPE_ACCESS_TOKEN?: string;
  VALUE_TYPE_NUMBER?: string;
  VALUE_TYPE_CATEGORY?: string;
  VALUE_TYPE_BOOLEAN?: string;
  name?: string;
  display_name?: string;
  description?: string;
  group_name?: string;
  value_type?: string;
  default_value?: string;
  category_values?: string;
  is_required?: boolean;
  [k: string]: unknown;
}
export interface CategoryValue {
  display_name?: string;
  name?: string;
  [k: string]: unknown;
}
export interface InitializeResult {
  capabilities?: ServerCapabilities;
  [k: string]: unknown;
}
export interface ServerCapabilities {
  text_document_sync?: TextDocumentSyncKind;
  hover_provider?: boolean;
  completion_provider?: CompletionOptions;
  signature_help_provider?: SignatureHelpOptions;
  definition_provider?: boolean;
  references_provider?: boolean;
  document_highlight_provider?: boolean;
  document_formatting_provider?: boolean;
  document_range_formatting_provider?: boolean;
  document_symbol_provider?: boolean;
  workspace_symbol_provider?: boolean;
  [k: string]: unknown;
}
export interface CompletionOptions {
  resolve_provider?: boolean;
  trigger_characters?: string;
  [k: string]: unknown;
}
export interface SignatureHelpOptions {
  trigger_characters?: string;
  [k: string]: unknown;
}
export interface TaskInfo {
  task_id?: string;
  status?: TaskStatus;
  server_name?: string;
  database_name?: string;
  name?: string;
  description?: string;
  provider_name?: string;
  [k: string]: unknown;
}
export interface Task {
  _is_completed?: string;
  task_info?: string;
  name?: string;
  description?: string;
  provider_name?: string;
  server_name?: string;
  database_name?: string;
  id?: string;
  status?: TaskStatus;
  status_message?: string;
  on_cancel?: string;
  cancellation_lock?: Lock;
  canceled?: boolean;
  [k: string]: unknown;
}
export interface Lock {
  [k: string]: unknown;
}
export interface DbColumn {
  is_bytes?: string;
  is_chars?: string;
  is_json?: string;
  is_long?: string;
  is_udt?: string;
  is_xml?: string;
  provider?: string;
  allow_db_null?: boolean;
  base_catalog_name?: string;
  column_size?: number;
  numeric_precision?: number;
  numeric_scale?: number;
  base_schema_name?: string;
  base_server_name?: string;
  base_table_name?: string;
  column_ordinal?: number;
  base_column_name?: string;
  column_name?: string;
  is_aliased?: boolean;
  is_auto_increment?: boolean;
  is_expression?: boolean;
  is_hidden?: boolean;
  is_identity?: boolean;
  is_key?: boolean;
  is_read_only?: boolean;
  is_unique?: boolean;
  data_type?: string;
  is_updatable?: boolean;
  _provider?: string;
  [k: string]: unknown;
}
export interface DbCellValue {
  display_value?: string;
  is_null?: boolean;
  row_id?: number;
  raw_object?: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface SubsetResult {
  result_subset?: ResultSetSubset;
  [k: string]: unknown;
}
export interface ResultSetSubset {
  rows?: string;
  row_count?: number;
  [k: string]: unknown;
}
export interface ResultSetSummary {
  id?: number;
  batch_id?: number;
  row_count?: number;
  complete?: boolean;
  column_info?: string;
  [k: string]: unknown;
}
export interface BatchSummary {
  id?: number;
  selection?: SelectionData;
  execution_start?: string;
  has_error?: boolean;
  execution_end?: string;
  execution_elapsed?: string;
  result_set_summaries?: string;
  [k: string]: unknown;
}
export interface BatchNotificationParams {
  batch_summary?: BatchSummary;
  owner_uri?: string;
  [k: string]: unknown;
}
export interface QueryCancelResult {
  messages?: string;
  [k: string]: unknown;
}
export interface MessageNotificationParams {
  owner_uri?: string;
  message?: ResultMessage;
  [k: string]: unknown;
}
export interface ResultMessage {
  batch_id?: number;
  is_error?: boolean;
  time?: string;
  message?: string;
  [k: string]: unknown;
}
export interface QueryCompleteNotificationParams {
  owner_uri?: string;
  batch_summaries?: string;
  [k: string]: unknown;
}
export interface ResultSetNotificationParams {
  owner_uri?: string;
  result_set_summary?: ResultSetSummary;
  [k: string]: unknown;
}
export interface SimpleExecuteResponse {
  rows?: string;
  row_count?: number;
  column_info?: string;
  [k: string]: unknown;
}
export interface SaveResultRequestResult {
  messages?: string;
  [k: string]: unknown;
}
export interface ObjectMetadata {
  metadata_type?: MetadataType;
  metadata_type_name?: string;
  name?: string;
  schema?: string;
  urn?: string;
  [k: string]: unknown;
}
export interface MetadataListResponse {
  metadata?: string;
  [k: string]: unknown;
}
export interface StatusChangeParams {
  owner_uri?: string;
  status?: string;
  [k: string]: unknown;
}
export interface DefinitionResult {
  [k: string]: unknown;
}
export interface CreateSessionResponse {
  session_id?: string;
  [k: string]: unknown;
}
export interface NodeInfo {
  node_path?: string;
  node_type?: string;
  label?: string;
  node_sub_type?: string;
  node_status?: string;
  is_leaf?: boolean;
  metadata?: ObjectMetadata;
  error_message?: string;
  is_system?: boolean;
  [k: string]: unknown;
}
export interface SessionCreatedParameters {
  error_message?: string;
  success?: boolean;
  session_id?: string;
  root_node?: NodeInfo;
  [k: string]: unknown;
}
export interface ExpandCompletedParameters {
  session_id?: string;
  node_path?: string;
  error_message?: string;
  nodes?: string;
  [k: string]: unknown;
}
export interface DisposeResponse {
  [k: string]: unknown;
}
export interface EditCommitResponse {
  [k: string]: unknown;
}
export interface SessionReadyNotificationParams {
  owner_uri?: string;
  success?: boolean;
  message?: string;
  [k: string]: unknown;
}
export interface EditSubsetResponse {
  [k: string]: unknown;
}
